/* ======

Grid:

	- Container
	- Columns
	- Row
	- Flex

====== */

$container: 	1280px;
$gutter:		20px;
$columns:		12;

// Container

.l-container {

	position: relative;

	max-width: $container;
	margin: {
		left: auto;
		right: auto;
	}

	&--content {

		padding: {
			left: $gutter;
			right: $gutter;
		}

	}

	@include clearfix;

	&--flush {

		padding: {
			left: 0;
			right: 0;
		}

		&-mq-1280 {

			@include mq(1280px) {

				padding: {
					left: 0;
					right: 0;
				}

			}

		}

	}

}

// Columns

.l-col {

	position: relative;
	float: left;

	&--fr { float: right; }

	&--center {

		display: block;
		float: none;
		clear: both;
		margin: {
			left: auto;
			right: auto;
		}

		@include clearfix;

	}

	&--inline {

		display: inline-block;
		float: none;

	}

	&--table { display: table; }

	&--cell {

		display: table-cell;
		vertical-align: middle;
		float: none;

		&--bottom { vertical-align: bottom; }

	}

	&--clear {

		clear: left;

	}

	&--content {

		padding: {
			left: $gutter;
			right: $gutter;
		}

	}

	&--wrapper {

		width: 100%;
		margin: 0;

		@include clearfix;

	}

	&--flush {

		&-left { padding-left: 0; }

		&-right { padding-right: 0; }

	}

	&--offset {

		@for $i from 1 through $columns {

			&-#{$i} { margin-left: ((100% / $columns) * $i); }

		}

	}

	&--offset-right {

		@for $i from 1 through $columns {

			&-#{$i} { margin-right: ((100% / $columns) * $i); }

		}

	}

	@for $i from 1 through $columns {

		&--#{$i} { width: ((100% / $columns) * $i); }

	}

	&--fifth { width: 20%; }

	$breakpoints: (
		mob-x-sml:	$mob-x-sml,
		mob: 		$mob,
		mob-sml: 	$mob-sml,
		mob-med:	$mob-med,
		mob-lrg: 	$mob-lrg,
		tab: 		$tab,
		tab-sml: 	$tab-sml,
		tab-lrg: 	$tab-lrg,
		tab-x-lrg:	$tab-x-lrg,
		desk: 		$desk,
		desk-lrg: 	$desk-lrg,
		desk-x-lrg:	$desk-x-lrg
	);

	@each $name, $breakpoint in $breakpoints {

	    &--mq-half-#{$name} {

			@include mq($breakpoint) {

				position: relative;

				display: block;
				width: 50%;
				margin: 0 0 5px;
				padding: {
					left: $gutter;
					right: $gutter;
				}


			}

	    }

	}

	@each $name, $breakpoint in $breakpoints {

	    &--mq-#{$name} {

			@include mq($breakpoint) {

				position: relative;

				display: block;
				width: 100%;
				margin: 0 0 20px;
				padding: {
					left: $gutter;
					right: $gutter;
				}


			}

			&-n {

				// please please please please forgive me, lesser of two evils

				@include mq($breakpoint) { display: none !important; }

			}

	    }

	}

	@each $name, $breakpoint in $breakpoints {

	    &--mq-flush-#{$name} {

			@include mq($breakpoint) {

				position: relative;

				width: 100%;
				margin: 0 0 20px;
				padding: {
					left: $gutter;
					right: $gutter;
				}

			}

	    }

	}

}



// Row

.l-row {

	position: relative;

	display: block;
	width: 100%;
	margin: 0 auto 10px;

	@include clearfix;

	&--inline { display: inline-block; }

	&--table { display: table; }

	&--nm { margin: 0; }

}



// Flex

.l-flex {

	display: -webkit-flex;
	display: -ms-flexbox;
	display: flex;

	justify-content: center;

	@include prefixer(flex-wrap, wrap, webkit ms spec);

	&__col {

		position: relative;

		display: -webkit-flex;
		display: -ms-flexbox;
		display: flex;
		flex-direction: column;

		// please, haf forgifness (to fix 100% height safari bug)

		// .safari & {

		// 	display: flex;

		// }

	}

	&--wrap { flex-wrap: wrap; }

}


.scale-with-grid {
	max-width: 100%;
}
